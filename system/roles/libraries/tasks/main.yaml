- name: Install Python libraries
  ansible.builtin.pip:
    name: "{{ item }}"
  loop:
    - kubernetes

- name: create kubectl versioned directory
  file:
    path: /opt/kubectl-{{ kubectl_version }}
    state: directory
  become: true

- name: Download kubectl
  ansible.builtin.get_url:
    url: "https://dl.k8s.io/release/{{ kubectl_version }}/bin/linux/amd64/kubectl"
    dest: /opt/kubectl-{{ kubectl_version }}
  register: kubectl
  become: true

- name: Download the kubectl checksum
  uri:
    url: https://dl.k8s.io/release/{{ kubectl_version }}/bin/linux/amd64/kubectl.sha256
    dest: /opt/kubectl-{{ kubectl_version }}
  register: kubectl
  become: true

- name: Get kubectl sha256sum
  shell: sha256sum /opt/kubectl-{{ kubectl_version }}/kubectl | cut -d " " -f1
  register: file_shasum

- set_fact:
    shasum1={{ file_shasum.stdout }}

- debug: var=shasum1
  run_once: true

- name: Get sha256sum value from file
  command: cat /opt/kubectl-{{ kubectl_version }}/kubectl.sha256
  register: downloaded_shasum

- set_fact:
    shasum2={{ downloaded_shasum.stdout }}

- debug: var=shasum2
  run_once: true

- name: Assert that the kubectl binary is OK
  assert:
    that:
      - file_shasum.stdout == downloaded_shasum.stdout
    fail_msg: "Shasum does not correspond"
    success_msg: "kubectl shasum verified: ok"

- name: Change kubectl file permission
  file:
    path: "/opt/kubectl-{{ kubectl_version }}/kubectl"
    mode: '0755'
  become: true

- name: Create a symlink to kubectl
  file:
    src: "/opt/kubectl-{{ kubectl_version }}/kubectl"
    dest: "/usr/bin/kubectl"
    state: link
  become: true

- name: Verify kubectl client version
  ansible.builtin.command:
    cmd: kubectl version --client
  register: kubectl_ver
  changed_when: false

- name: Show installed kubectl version
  ansible.builtin.debug:
    msg: "{{ kubectl_ver.stdout }}"

- name: Download Helm {{ helm_version }}
  ansible.builtin.get_url:
    url: "https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz"
    dest: /tmp/helm-{{ helm_version }}.tar.gz
    mode: '0644'

- name: Unpack Helm archive via tar
  ansible.builtin.command:
    cmd: tar -xvzf /tmp/helm-{{ helm_Version }}.tar.gz --strip-component=1 -C /tmp

- name: Move helm binary into place
  ansible.builtin.copy:
    src: /tmp/helm
    dest: /usr/bin/helm
    mode: '0755'

- name: Verify Helm version
  ansible.builtin.command:
    cmd: helm version --client
  register: helm_ver
  changed_when: false

- name: Show installed Helm version
  ansible.builtin.debug:
    msg: "{{ helm_ver.stdout }}"